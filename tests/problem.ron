// (define (problem letseat-simple)
//     (:domain letseat)
//     (:objects
//         arm - robot
//         cupcake - cupcake
//         table - location
//         plate - location
//     )

//     (:init
//         (on arm table)
//         (on cupcake table)
//         (arm-empty)
//         (path table plate)
//     )
//     (:goal
//         (on cupcake plate)
//     )
// )

Problem(
    name: "letseat-simple",
    domain: "letseat",
    objects: [
        Object(name: "arm", type: "robot"),
        Object(name: "cupcake", type: "cupcake"),
        Object(name: "table", type: "location"),
        Object(name: "plate", type: "location"),
    ],
    init: [
        Predicate(name: "on", args: ["arm", "table"]),
        Predicate(name: "on", args: ["cupcake", "table"]),
        Predicate(name: "arm-empty"),
        Predicate(name: "path", args: ["table", "plate"]),
    ],
    goal: [
        Predicate(name: "on", args: ["cupcake", "plate"]),
    ],
)